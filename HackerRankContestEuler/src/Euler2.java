/*
 * This problem is a programming version of Problem 2 from projecteuler.net

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
Constraints

Output Format

Print the required answer for each test case.

Sample Input 0

2
10
100
Sample Output 0

10
44
Explanation 0

For , we have , sum is .
For , we have , sum is .
 */

import java.util.*;

public class Euler2 {

	public Euler2() {
		// TODO Auto-generated constructor stub
	}

    public static long fibEven(long n) {
        if (n == 0 ) return 0;
        else if(n == 1) return 1;
        else return 4 * (fibEven(n-1) + fibEven(n-2));
    }
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        long t = in.nextLong();
        for(int a0 = 0; a0 < t; a0++){
        	long n = in.nextLong();
            System.out.println(fibEven(n));
            
        }
        in.close();
    }
	
}
